{"version":3,"sources":["components/Cardbody.js","util/API.js","components/SearchBar.js","components/Mainbody.js","App.js","reportWebVitals.js","index.js"],"names":["CardBody","search","employees","filter","employee","name","toLowerCase","includes","map","scope","role","department","id","getAllEmployees","Promise","resolve","setTimeout","SearchBar","updateSearch","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","MainBody","useState","sortBy","asc","sortState","setSortState","sortList","input","sort","console","log","employeesState","a","b","setEmployeesState","useEffect","then","data","term","className","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e86262c.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction CardBody({ search, employees }) {\r\n  return (\r\n    <>\r\n      {employees\r\n        .filter((employee) =>\r\n          search\r\n            ? employee.name.toLowerCase().includes(search.toLowerCase())\r\n            : true\r\n        )\r\n        .map((employee) => {\r\n          return (\r\n            <tbody key={employee.id}>\r\n              <th scope=\"col\">{employee.name}</th>\r\n              <th scope=\"col\">{employee.role}</th>\r\n              <th scope=\"col\">{employee.department}</th>\r\n            </tbody>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\nexport default CardBody;\r\n","// Dummy data to mock API fetch\r\nconst employees = [\r\n  {\r\n    id: 1,\r\n    name: \"Michael Scott\",\r\n    role: \"Regional Manager\",\r\n    department: \"Management\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Karen Filippelli\",\r\n    role: \"Regional Manager\",\r\n    department: \"Management\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Pam Beesly\",\r\n    role: \"Receptionist\",\r\n    department: \"Sales\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Jim Halpert\",\r\n    role: \"Sales Representative\",\r\n    department: \"Sales\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Dwight Schrute\",\r\n    role: \"Sales Representative\",\r\n    department: \"Sales\",\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Andy Bernard\",\r\n    role: \"Sales Representative\",\r\n    department: \"Sales\",\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Angela Martin\",\r\n    role: \"Senior Accountant\",\r\n    department: \"Accounting\",\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"Kevin Malone\",\r\n    role: \"Accountant\",\r\n    department: \"Accounting\",\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Oscar Malone\",\r\n    role: \"Accountant\",\r\n    department: \"Accounting\",\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Toby Flenderson\",\r\n    role: \"Human Resources Representative\",\r\n    department: \"Human Resources\",\r\n  },\r\n];\r\n\r\n// This code is meant to serve as a mock fetch from an API.\r\nexport const getAllEmployees = new Promise(function (resolve) {\r\n  setTimeout(() => {\r\n    resolve(employees);\r\n  }, 1000);\r\n});\r\n","import React from \"react\";\r\n\r\nfunction SearchBar({ updateSearch }) {\r\n  return (\r\n    <form id=\"directory-form\" onSubmit={(e) => e.preventDefault()}>\r\n      <label>Search for Employee:</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter name\"\r\n        onChange={(e) => updateSearch(e.target.value)}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CardBody from \"./Cardbody\";\r\nimport { getAllEmployees } from \"../util/API\";\r\nimport SearchBar from \"./SearchBar\";\r\nfunction MainBody() {\r\n  const [sortState, setSortState] = useState({\r\n    sortBy: \"\",\r\n    asc: true,\r\n    search: \"\",\r\n  });\r\n  const sortList = (input) => {\r\n    console.log(\"clicked\");\r\n    setSortState({\r\n      ...sortState,\r\n      sortBy: input,\r\n      asc: !sortState.asc,\r\n    });\r\n    let sort;\r\n    if (sortState.asc) {\r\n      sort = employeesState.sort((a, b) => {\r\n        return a[input] > b[input] ? 1 : -1;\r\n      });\r\n    } else {\r\n      sort = employeesState.sort((a, b) => (a[input] < b[input] ? 1 : -1));\r\n    }\r\n    setEmployeesState(sort);\r\n  };\r\n  const updateSearch = (term) => {\r\n    setSortState({\r\n      ...sortState,\r\n      search: term,\r\n    });\r\n  };\r\n  const [employeesState, setEmployeesState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllEmployees.then((data) => {\r\n      setEmployeesState(data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <SearchBar updateSearch={updateSearch} />\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\" onClick={() => sortList(\"name\")}>\r\n              Name\r\n            </th>\r\n            <th scope=\"col\" onClick={() => sortList(\"role\")}>\r\n              Role\r\n            </th>\r\n            <th scope=\"col\" onClick={() => sortList(\"department\")}>\r\n              Department\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <CardBody search={sortState.search} employees={employeesState} />\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default MainBody;\r\n","import MainBody from \"./components/Mainbody\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Your library of employees</h1>\r\n      <MainBody />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}